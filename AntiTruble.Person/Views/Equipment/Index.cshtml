@{
    ViewData["Title"] = "Менеджер устройств";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using AntiTruble.ClassLibrary.Models;
@using AntiTruble.ClassLibrary.Enums
@model IEnumerable<EquipmentInfo>

<head>
    <style>
        #searchInput {
            background-image: url('/images/search_icon.png');
            background-size: auto;
            background-position: 10px 12px; /* Position the search icon */
            background-repeat: no-repeat; /* Do not repeat the icon image */
            width: 100%; /* Full-width */
            font-size: 16px; /* Increase font-size */
            padding: 12px 20px 12px 40px; /* Add some padding */
            border: 1px solid #ddd; /* Add a grey border */
            margin-bottom: 22px; /* Add some space below the input */
        }
    </style>
</head>
<body>
    <div id="add-defects"></div>

    <div id="equipment-list">
        <h2>Устройства в ремонте:</h2>
        <hr />
        <div>
            <input type="text" id="searchInput" onkeyup="onSearch()" placeholder="Поиск устройств...">
        </div>
        <table id="equipmentTable" class="table table-bordered table-responsive table-hover">
            <tr>
                <th>Номер оборудования</th>
                <th>Название</th>
                <th>Тип</th>
                <th>Дефекты</th>
                @if (ViewBag.Role == PersonTypes.Master)
                {
                    <th>Действия</th>
                }
            </tr>
            @foreach (var equipment in Model)
            {
            <tr>
                <td>
                    <input type="text" id="idEquipment" value="@equipment.EquipmentId" hidden="hidden" />
                    <input type="text" id="repairId" value="@equipment.Repair" hidden="hidden" />
                    @equipment.EquipmentId
                </td>
                <td>@equipment.Name</td>
                <td>@equipment.EquipmentType.ToString()</td>
                <td>
                    <ul>
                        @foreach (var defect in equipment.Defects)
                        {
                            <li>
                                @defect.DefectName  —  @defect.Price.Value.ToString() руб.
                            </li>
                        }
                    </ul>
                </td>
                @if (ViewBag.Role == PersonTypes.Master)
                {
                    <td>
                        <button style="width: 150px; height: 30px;" class="btn" id="addDefects" onclick="onClickAddDefects(this.id)">Добавить дефекты</button>
                    </td>
                }
                </tr>
            }
        </table>
    </div>
</body>


<script type="text/javascript">
    
    $(document).ready(function () {
        var UIelements = ["idEquipment", "addDefects", "repairId"];
        for (i = 0; i < UIelements.length; i++) {
            var elementsById = document.querySelectorAll('[id=' + UIelements[i] + ']');
            for (j = 0; j < elementsById.length; j++) {
                var newID = UIelements[i] + "_" + j;
                $(elementsById[j]).attr('id', newID);
            }
        }
    });

    function getSecondPart(str) {
        return str.split('_')[1];
    }


    function onSearch() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("equipmentTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function checkAvailible(repairId) {

    }

    function onClickAddDefects(id) {
        var equipmentId = $("#idEquipment_" + getSecondPart(id)).val();
        var repairId = $("#repairId_" + getSecondPart(id)).val(); 

        var urlPath = '@Url.Action("CheckAvailible", "Equipment")';
        $.ajax({
            type: "POST",
            url: urlPath,
            data: {
                "repairId": repairId
            },
            dataType: "html",
            success: function (data) {
                if (data.Availible == "True") {
                    $('#equipment-list').hide();
                    urlPath = '@Url.Action("OnAddDefects", "Equipment")';
                    $.ajax({
                        type: "GET",
                        url: urlPath,
                        data: {
                            "equipmentId": equipmentId,
                            "repairId": repairId
                        },
                        dataType: "html",
                        success: function (data) {
                            $("#add-defects").html(data);
                        },
                        error: function () {
                            alert("error");
                        }
                    });
                }
                else {
                    alert("Заявка должна быть в статусе диагностики");
                    window.location.href = '@Url.Action("Index", "Equipment")';
                }
                 
            },
            error: function () {
                alert("error");
            }
        });


       
    }

</script>